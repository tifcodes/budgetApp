{"version":3,"sources":["Header.js","firebase.js","Form.js","Column.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","dbRef","database","ref","Form","handleChangeType","event","setState","type","target","value","handleChangeCategories","categories","handleDescription","description","handleAmountChange","amount","handleSubmit","preventDefault","transToBeAdded","state","catgories","push","handleReset","this","isEnabled","length","onChange","onSubmit","htmlFor","className","id","placeholder","min","step","disabled","onClick","Component","ShowColumn","handleDelete","child","remove","handleSubtotal","array","reduce","a","b","parseFloat","toFixed","handleTotal","props","incomeArray","expenseArray","transList","map","trans","i","transObject","key","aria-hidden","transKey","Footer","App","on","snapshot","val","newTrans","newIncomeArray","newExpenseArray","singleTrans","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.530c72ee.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n    <header>\n      <h1> budget app</h1>\n    </header>\n  )\n}\n\nexport default Header;","import firebase from \"firebase/app\"\nimport \"firebase/database\"\nimport \"firebase/auth\"\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCjI3Akd0ByoWLLk4jhRqiC5S9ROEQPKfs\",\n  authDomain: \"budget-app-6f2e9.firebaseapp.com\",\n  databaseURL: \"https://budget-app-6f2e9.firebaseio.com\",\n  projectId: \"budget-app-6f2e9\",\n  storageBucket: \"budget-app-6f2e9.appspot.com\",\n  messagingSenderId: \"472155372575\",\n  appId: \"1:472155372575:web:b34d0ba760d2fa7c22e92a\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst dbRef = firebase.database().ref();\n\nexport default dbRef;","import React, { Component } from 'react';\n\nimport dbRef from './firebase'\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      description: \"\",\n      amount: \"\",\n      type: \"\",\n      categories: \"\",\n    }\n  }\n\n  // changing the income and expense drop down\n  handleChangeType = (event) => {\n    this.setState({\n      type: event.target.value\n    })\n  }\n\n  // changing the categories drop down\n  handleChangeCategories = (event) => {\n    this.setState({\n      categories: event.target.value\n    })\n  }\n\n  // listening to changes in the description\n  handleDescription = (event) => {\n    this.setState({\n      description: event.target.value,\n    })\n  }\n\n  // listening to changes in the amount\n  handleAmountChange = (event) => {\n    this.setState({\n      amount: event.target.value,\n    })\n  }\n\n  // submit \n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const transToBeAdded = {\n      description: this.state.description,\n      amount: this.state.amount,\n      type: this.state.type,\n      categories: this.state.categories\n    }\n\n    if (transToBeAdded.description !== \"\" && transToBeAdded.amount !== \"\" && transToBeAdded.type !== \"\" && transToBeAdded.catgories !== \"\") {\n      dbRef.push(transToBeAdded)\n      this.setState({\n        description: \"\",\n        amount: \"\",\n        type: \"\",\n        categories: \"\"\n      })\n    }\n  }\n\n  handleReset = () => {\n    this.setState({\n      description: \"\",\n      amount: \"\",\n      type: \"\",\n      categories: \"\"\n    })\n  }\n\n  render() {\n    const { description, amount, type, categories} = this.state\n    const isEnabled = description.length > 0 && amount.length > 0 && type.length > 0 &&\n    categories.length > 0\n    return (\n      <div>\n        {/* dropdown menu */}\n          <select\n            onChange={this.handleChangeType} value={type}>\n            <option value=\"\" > select </option>\n            <option value=\"income\"> üí∞ Income </option>\n            <option value=\"expense\"> üí∏ Expense </option>\n          </select>\n        <select onChange={this.handleChangeCategories} value={categories}>\n          <option value=\"\"> category </option>\n            <option value=\"housing\">\n              üè° Housing\n            </option>\n          <option value=\"transportation\">\n            üöó Transportation\n            </option>\n          <option value=\"food\">\n            üç± Food\n          </option>\n          <option value=\"utilities\">\n            üí° Utilities\n          </option>\n          <option value=\"insurance\">\n            üë©‚Äç‚öïÔ∏è Insurance\n          </option>\n          <option value=\"medical\">\n            ü©∫ Medical & HealthCare\n          </option>\n          <option value=\"personal\">\n            üßñ‚Äç‚ôÄÔ∏è Personal\n          </option>\n          <option value=\"saving\">\n            üíµ Saving\n          </option>\n          <option value=\"debt\">\n            üí∏ Debt\n          </option>\n          <option value=\"retirement\">\n            üëµ Retirement\n          </option>\n          <option value=\"education\">\n            üìö Education\n          </option>\n          <option value=\"gifts\">\n            üßß Gifts\n          </option>\n          <option value=\"entertainment\">\n            üé¨ Entertainment\n          </option>\n\n          </select>\n          {/* form */}\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"transType\" className=\"visuallyHidden\"></label>\n            <input id=\"transType\" type=\"text\" placeholder=\"description\"\n              value={description} onChange={this.handleDescription} />\n            <label htmlFor=\"transAmount\"className=\"visuallyHidden\"></label>\n            <input id=\"transAmount\" type=\"number\" placeholder=\"amount\" min=\"0\" step=\".01\"\n              value={amount}\n              onChange={this.handleAmountChange} />\n            <button disabled={!isEnabled} type=\"submit\"> Add Transaction to List</button>\n            <button type=\"button\" onClick={this.handleReset} > Reset </button>\n          </form>\n      </div>\n    )\n  }\n}\n\nexport default Form;\n\n// show all expenses; show each category\n// balance (results)\n// show a graph with the expenses (bar, pie)","import React, { Component } from \"react\";\nimport dbRef from './firebase'\n\nclass ShowColumn extends Component {\n  handleDelete = (event) => {\n    dbRef.child(event.target.id).remove();\n  }\n\n  handleSubtotal = (array) => {\n    return array.reduce((a,b) => \n      parseFloat(a) + parseFloat(b), 0\n    ).toFixed(2)\n  }\n\n  handleTotal = () => {\n    const arr1 = this.handleSubtotal(this.props.incomeArray);\n    const arr2 = this.handleSubtotal(this.props.expenseArray);\n    return (arr1 - arr2).toFixed(2)\n  }\n\n  render() {\n    // const {transKey} = this.props.transList\n    return (\n      <div>\n        <div className=\"flexParent\">\n          <div>\n            <h2> Income </h2>\n            <ul>\n              {this.props.transList.map((trans, i) => {\n                const {type, description, amount} = trans.transObject;               \n                return (\n                  (type === \"income\") ?\n\n                    <li key={i}> \n                    <i className=\"fa fa-minus-circle\" aria-hidden=\"true\" \n                    id={trans.transKey} onClick={this.handleDelete}> </i>  {description\n                    } : {amount} </li>\n\n                    : null\n                )\n              })}\n            </ul>\n            <h4 className=\"colorPop\"> Total : $ {this.handleSubtotal(this.props.incomeArray)} </h4>\n          </div>\n          <div>\n            <h2> Expenses </h2>\n            <ul>\n              {this.props.transList.map((trans, i) => {\n                const { type, description, amount } = trans.transObject; \n                return (\n                  (type === \"expense\") ?\n\n                    <li key={i}> \n                    <i className=\"fa fa-minus-circle\" aria-hidden=\"true\" id={trans.transKey} onClick={this.handleDelete}></i>  {description\n                    } : {amount} </li>\n\n                    : null\n                )\n              })}\n            </ul>\n            <h4 className=\"colorPop\"> Total: $ {this.handleSubtotal(this.props.expenseArray)} </h4>\n          </div>\n        </div>\n        <div>\n          {this.handleTotal() >= 0 ?\n\n            <h3 className=\"colorPositive\"> Balance: $ {this.handleTotal()} </h3>\n\n            :\n\n            <h3 className=\"colorNegative\"> Balance: $ {this.handleTotal()} </h3>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ShowColumn;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer>\n      <p> Copyright ¬© Tiffany Wong 2020 </p>\n    </footer>\n  )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport \"./styles/style.scss\"\n\nimport Header from \"./Header\"\nimport Form from \"./Form\"\nimport dbRef from './firebase'\nimport ShowColumn from './Column'\nimport Footer from './Footer'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      transList: [],\n      incomeArray: [],\n      expenseArray: [],\n    }\n  }\n\n  // listening to firebase\n  componentDidMount() {\n    dbRef.on(\"value\", (snapshot) => {\n      const trans = snapshot.val();\n\n      const newTrans = [];\n      const newIncomeArray = [];\n      const newExpenseArray = [];\n\n      for (let i in trans) {\n        const singleTrans = {\n          transKey: i,\n          transObject: trans[i],\n        }\n        newTrans.push(singleTrans)\n\n        if (singleTrans.transObject.type === \"income\") {\n          newIncomeArray.push(singleTrans.transObject.amount)\n        }\n\n        if (singleTrans.transObject.type === \"expense\") {\n          newExpenseArray.push(singleTrans.transObject.amount)\n        }\n      }\n\n      this.setState({\n        transList: newTrans,\n        incomeArray: newIncomeArray,\n        expenseArray: newExpenseArray,\n      })\n    })\n  }\n\n  render() {\n    const {incomeArray, expenseArray, transList} = this.state\n    return (\n      <div className=\"wrapper\">\n        <Header />\n        {/* dropdown menu */}\n        <main>\n          {/* form */}\n          <Form />\n          {/* column */}\n          <ShowColumn \n          incomeArray={incomeArray} \n          expenseArray={expenseArray}\n          transList=\n          {transList} />\n        </main>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}