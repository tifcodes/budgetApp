{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanywong/Documents/juno/bootcamp/week6/tiffanyWongProjectFive/src/App.js\";\nimport React, { Component } from 'react';\nimport \"./styles/style.scss\";\nimport Header from \"./Header\";\nimport firebase from './firebase';\nimport ShowColumn from './Column';\nimport Footer from './Footer';\nconst dbRef = firebase.database().ref();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChangeType = event => {\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.handleUserInputChange = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n    };\n\n    this.handleAmountChange = event => {\n      this.setState({\n        amount: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const transactionToBeAdded = {\n        userInput: this.state.userInput,\n        amount: this.state.amount,\n        type: this.state.type\n      };\n\n      if (transactionToBeAdded.userInput !== \"\" && transactionToBeAdded.amount !== \"\" && transactionToBeAdded.type !== \"\") {\n        dbRef.push(transactionToBeAdded);\n        this.setState({\n          userInput: \"\",\n          amount: \"\"\n        });\n      }\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        userInput: \"\",\n        amount: \"\",\n        type: \"\"\n      });\n    };\n\n    this.state = {\n      transactionList: [],\n      incomeArray: [],\n      expenseArray: [],\n      userInput: \"\",\n      amount: \"\",\n      type: \"select\"\n    };\n  } // listening to firebase\n\n\n  componentDidMount() {\n    dbRef.on(\"value\", snapshot => {\n      const transaction = snapshot.val();\n      const newTransaction = [];\n      const newIncomeArray = [];\n      const newExpenseArray = [];\n\n      for (let i in transaction) {\n        const individualTransactions = {\n          transactionKey: i,\n          transactionObject: transaction[i]\n        };\n        newTransaction.push(individualTransactions);\n\n        if (individualTransactions.transactionObject.type === \"income\") {\n          newIncomeArray.push(individualTransactions.transactionObject.amount);\n        }\n\n        if (individualTransactions.transactionObject.type === \"expense\") {\n          newExpenseArray.push(individualTransactions.transactionObject.amount);\n        }\n      }\n\n      this.setState({\n        transactionList: newTransaction,\n        incomeArray: newIncomeArray,\n        expenseArray: newExpenseArray\n      });\n    });\n  } // changing the income and expense drop down\n\n\n  render() {\n    const _this$state = this.state,\n          userInput = _this$state.userInput,\n          amount = _this$state.amount;\n    const isEnabled = userInput.length > 0 && amount.length > 0;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleChangeType,\n      value: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" select \"), React.createElement(\"option\", {\n      value: \"income\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" income \"), React.createElement(\"option\", {\n      value: \"expense\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" expense \")), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"transactionType\",\n      className: \"visuallyHidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"transactionType\",\n      type: \"text\",\n      placeholder: \"description\",\n      value: this.state.userInput,\n      onChange: this.handleUserInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"transactionAmount\",\n      className: \"visuallyHidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"transactionAmount\",\n      type: \"number\",\n      placeholder: \"amount\",\n      min: \"0\",\n      step: \".01\",\n      value: this.state.amount,\n      onChange: this.handleAmountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: !isEnabled,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \" Add Transaction to List\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Reset \")), React.createElement(ShowColumn, {\n      incomeArray: this.state.incomeArray,\n      expenseArray: this.state.expenseArray,\n      listTransaction: this.state.transactionList,\n      delete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tiffanywong/Documents/juno/bootcamp/week6/tiffanyWongProjectFive/src/App.js"],"names":["React","Component","Header","firebase","ShowColumn","Footer","dbRef","database","ref","App","constructor","handleChangeType","event","setState","type","target","value","handleUserInputChange","userInput","handleAmountChange","amount","handleSubmit","preventDefault","transactionToBeAdded","state","push","handleReset","transactionList","incomeArray","expenseArray","componentDidMount","on","snapshot","transaction","val","newTransaction","newIncomeArray","newExpenseArray","i","individualTransactions","transactionKey","transactionObject","render","isEnabled","length","handleDelete"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"./styles/style.scss\"\n\nimport Header from \"./Header\"\nimport firebase from './firebase'\nimport ShowColumn from './Column'\nimport Footer from './Footer'\n\nconst dbRef = firebase.database().ref();\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      transactionList: [],\n      incomeArray: [],\n      expenseArray: [],\n      userInput: \"\",\n      amount: \"\",\n      type: \"select\",\n    }\n  }\n\n  // listening to firebase\n  componentDidMount() {\n    dbRef.on(\"value\", (snapshot) => {\n      const transaction = snapshot.val();\n\n      const newTransaction = [];\n      const newIncomeArray = [];\n      const newExpenseArray = [];\n\n      for (let i in transaction) {\n        const individualTransactions = {\n          transactionKey: i,\n          transactionObject: transaction[i],\n        }\n        newTransaction.push(individualTransactions)\n\n        if (individualTransactions.transactionObject.type === \"income\") {\n          newIncomeArray.push(individualTransactions.transactionObject.amount)\n        }\n\n        if (individualTransactions.transactionObject.type === \"expense\") {\n          newExpenseArray.push(individualTransactions.transactionObject.amount)\n        }\n      }\n\n      this.setState({\n        transactionList: newTransaction,\n        incomeArray: newIncomeArray,\n        expenseArray: newExpenseArray,\n      })\n    })\n  }\n\n  // changing the income and expense drop down\n  handleChangeType = (event) => {\n    this.setState({\n      type: event.target.value\n    })\n  }\n\n  // listening to changes in the description\n  handleUserInputChange = (event) => {\n    this.setState({\n      userInput: event.target.value,\n    })\n  }\n\n  // listening to changes in the amount\n  handleAmountChange = (event) => {\n    this.setState({\n      amount: event.target.value,\n    })\n  }\n\n  // submit \n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const transactionToBeAdded = {\n      userInput: this.state.userInput,\n      amount: this.state.amount,\n      type: this.state.type\n    }\n\n    if (transactionToBeAdded.userInput !== \"\" && transactionToBeAdded.amount !== \"\" && transactionToBeAdded.type !== \"\") {\n      dbRef.push(transactionToBeAdded)\n      this.setState({\n        userInput: \"\",\n        amount: \"\",\n      })\n    }\n  }\n\n  handleReset = () => {\n    this.setState({\n      userInput: \"\",\n      amount: \"\",\n      type: \"\"\n    })\n  }\n\n  render() {\n    const { userInput, amount } = this.state\n    const isEnabled = userInput.length > 0 && amount.length > 0\n    return (\n      <div className=\"wrapper\">\n        <Header />\n        {/* dropdown menu */}\n        <main>\n          <select onChange={this.handleChangeType} value={this.state.type}>\n            <option value=\"\" > select </option>\n            <option value=\"income\"> income </option>\n            <option value=\"expense\"> expense </option>\n          </select>\n          {/* form */}\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"transactionType\" className=\"visuallyHidden\"></label>\n            <input id=\"transactionType\" type=\"text\" placeholder=\"description\" value={this.state.userInput} onChange={this.handleUserInputChange} />\n            <label htmlFor=\"transactionAmount\" className=\"visuallyHidden\"></label>\n            <input id=\"transactionAmount\" type=\"number\" placeholder=\"amount\" min=\"0\" step=\".01\" value={this.state.amount} onChange={this.handleAmountChange} />\n            <button disabled={!isEnabled} type=\"submit\"> Add Transaction to List</button>\n            <button type=\"button\" onClick={this.handleReset} > Reset </button>\n          </form>\n          {/* column */}\n          <ShowColumn \n          incomeArray={this.state.incomeArray} expenseArray={this.state.expenseArray}listTransaction={this.state.transactionList} \n          delete={this.handleDelete} />\n        </main>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}