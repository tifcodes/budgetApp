{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanywong/Documents/juno/bootcamp/week6/tiffanyWongProjectFive/src/Result.js\";\nimport React, { Component } from \"react\";\nimport Chart from \"chart.js\";\n\nclass Result extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n    this.state = {\n      labels: []\n    };\n\n    this.reduceArray = (objectArray, property) => {\n      objectArray.reduce((data, obj) => {\n        console.log(data.categories);\n\n        if (data.categories) {\n          let amount = parseFloat(data.amount);\n          amount += amount;\n          console.log(amount);\n          data.categories = [];\n        }\n\n        data.categories.push(obj);\n        console.log(data);\n        return data;\n      }, {}); // return objectArray.reduce((acc,obj) => {\n      //   let key = obj[property]\n      //   if (!acc[key]) {\n      //     acc[key] = []\n      //   }\n      //   acc[key].push(obj)\n      //   return acc\n      // }, {})\n    };\n\n    this.handleSubtotal = array => {\n      return array.reduce((a, b) => parseFloat(a) + parseFloat(b), 0).toFixed(2);\n    };\n\n    this.handleSubtotal = array => {\n      return array.reduce((a, b) => parseFloat(a) + parseFloat(b), 0).toFixed(2);\n    };\n\n    this.handleTotal = () => {\n      const arr1 = this.handleSubtotal(this.props.incomeAmountArray);\n      const arr2 = this.handleSubtotal(this.props.expenseAmountArray);\n      return (arr1 - arr2).toFixed(2);\n    };\n  }\n\n  componentDidUpdate() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    const _this$props = this.props,\n          expenseArray = _this$props.expenseArray,\n          expenseAmountArray = _this$props.expenseAmountArray,\n          expenseCat = _this$props.expenseCat;\n    new Chart(myChartRef, {\n      type: \"horizontalBar\",\n      data: {\n        //Bring in data\n        labels: expenseArray.map(data => data.categories),\n        datasets: [{\n          label: \"Expense Result\",\n          data: expenseArray.map(data => data.amount),\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        //Customize chart options\n        legend: {\n          labels: {\n            fontSize: 22\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontSize: 22\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontSize: 22\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  render() {\n    // console.log(this.props.expenseArray);\n    const array1 = this.reduceArray(this.props.expenseArray);\n    console.log(array1);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.handleTotal() >= 0 ? React.createElement(\"h3\", {\n      className: \"colorPositive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" Balance: $ \", this.handleTotal(), \" \") : React.createElement(\"h3\", {\n      className: \"colorNegative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \" Balance: $ \", this.handleTotal(), \" \"), React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Result;","map":{"version":3,"sources":["/Users/tiffanywong/Documents/juno/bootcamp/week6/tiffanyWongProjectFive/src/Result.js"],"names":["React","Component","Chart","Result","chartRef","createRef","state","labels","reduceArray","objectArray","property","reduce","data","obj","console","log","categories","amount","parseFloat","push","handleSubtotal","array","a","b","toFixed","handleTotal","arr1","props","incomeAmountArray","arr2","expenseAmountArray","componentDidUpdate","myChartRef","current","getContext","expenseArray","expenseCat","type","map","datasets","label","backgroundColor","borderColor","borderWidth","options","legend","fontSize","scales","xAxes","ticks","beginAtZero","yAxes","render","array1"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\n\nclass Result extends Component {\n  chartRef = React.createRef();\n  state = {\n    labels: []\n  }\n\n  reduceArray = (objectArray, property) => {\n    objectArray.reduce((data, obj) => {\n      console.log(data.categories); \n      if (data.categories) {\n        let amount = parseFloat(data.amount)\n        amount += amount\n        console.log(amount);\n        data.categories = []\n      }\n      data.categories.push(obj)\n      console.log(data);\n      return data\n    }, {})\n    \n    // return objectArray.reduce((acc,obj) => {\n    //   let key = obj[property]\n    //   if (!acc[key]) {\n    //     acc[key] = []\n    //   }\n    //   acc[key].push(obj)\n    //   return acc\n    // }, {})\n  }\n\n  handleSubtotal = (array) => {\n    return array.reduce((a, b) =>\n      parseFloat(a) + parseFloat(b), 0\n    ).toFixed(2)\n  }\n  componentDidUpdate() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    const {expenseArray, expenseAmountArray, expenseCat} = this.props\n    new Chart(myChartRef, {\n      type: \"horizontalBar\",\n      data: {\n        //Bring in data\n        labels: expenseArray.map((data) => data.categories),\n        datasets: [\n          {\n            label: \"Expense Result\",\n            data: expenseArray.map((data) => data.amount),\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n              \"rgba(255, 159, 64, 0.2)\"\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\"\n            ],\n            borderWidth: 1\n          }\n        ],\n      },\n      options: {\n        //Customize chart options\n        legend: {\n          labels: {\n            fontSize: 22\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                fontSize: 22\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                fontSize: 22\n              }\n            }\n          ]\n        }\n      }\n    });\n  }\n\n  handleSubtotal = (array) => {\n    return array.reduce((a, b) =>\n      parseFloat(a) + parseFloat(b), 0\n    ).toFixed(2)\n  }\n\n  handleTotal = () => {\n    const arr1 = this.handleSubtotal(this.props.incomeAmountArray);\n    const arr2 = this.handleSubtotal(this.props.expenseAmountArray);\n    return (arr1 - arr2).toFixed(2)\n  }\n\n  render() {\n    // console.log(this.props.expenseArray);\n    const array1 = this.reduceArray(this.props.expenseArray)\n    console.log(array1);\n    \n    return (\n      <div>\n        {this.handleTotal() >= 0 ?\n\n          <h3 className=\"colorPositive\"> Balance: $ {this.handleTotal()} </h3>\n\n          :\n\n        <h3 className=\"colorNegative\"> Balance: $ {this.handleTotal()} </h3>}\n        <canvas\n          id=\"myChart\"\n          ref={this.chartRef}\n      />\n      </div>\n    )\n  }\n}\n\nexport default Result"]},"metadata":{},"sourceType":"module"}