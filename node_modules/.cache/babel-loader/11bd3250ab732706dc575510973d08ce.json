{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanywong/Documents/juno/bootcamp/week6/tiffanyWongProjectFive/src/Result.js\";\nimport React, { Component } from \"react\";\nimport Chart from \"chart.js\";\n\nclass Result extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n    this.state = {\n      labels: []\n    };\n\n    this.handleSubtotal = array => {\n      return array.reduce((a, b) => parseFloat(a) + parseFloat(b), 0).toFixed(2);\n    };\n\n    this.handleTotal = () => {\n      const arr1 = this.handleSubtotal(this.props.incomeAmountArray);\n      const arr2 = this.handleSubtotal(this.props.expenseAmountArray);\n      return (arr1 - arr2).toFixed(2);\n    };\n\n    this.total = () => {\n      const group = this.props.expenseArray.reduce((r, a) => {\n        r[a.categories] = [...(r[a.categories] || []), a];\n        return r;\n      }, {});\n      return Object.keys(group).map(g => {\n        if (group[g] === undefined) {\n          return;\n        } else {\n          const b = group[g].reduce((a, dat) => {\n            a += parseFloat(dat.amount);\n            return a;\n          }, 0);\n          console.log(b);\n          return \"\".concat(g, \": \").concat(b);\n        }\n      });\n    };\n\n    this.total1 = () => {\n      this.total().map(c => {\n        console.log(c);\n        return c;\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    const _this$props = this.props,\n          expenseArray = _this$props.expenseArray,\n          expenseAmountArray = _this$props.expenseAmountArray,\n          expenseCat = _this$props.expenseCat;\n    new Chart(myChartRef, {\n      type: \"horizontalBar\",\n      data: {\n        //Bring in data\n        labels: expenseArray.map(data => data.categories),\n        datasets: [{\n          label: \"Expense Result\",\n          data: expenseArray.map(data => data.amount),\n          // data: this.a(),\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        //Customize chart options\n        legend: {\n          labels: {\n            fontSize: 22\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontSize: 22\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontSize: 22\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  render() {\n    console.log(this.total());\n    console.log(this.total1()); // console.log(this.props.expenseArray);\n    // const array1 = this.reduceArray(this.props.expenseArray)\n    // console.log(array1);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.handleTotal() >= 0 ? React.createElement(\"h3\", {\n      className: \"colorPositive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Balance: $ \", this.handleTotal(), \" \") : React.createElement(\"h3\", {\n      className: \"colorNegative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" Balance: $ \", this.handleTotal(), \" \"), React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \" \", this.total(), \" \"));\n  }\n\n}\n\nexport default Result;","map":{"version":3,"sources":["/Users/tiffanywong/Documents/juno/bootcamp/week6/tiffanyWongProjectFive/src/Result.js"],"names":["React","Component","Chart","Result","chartRef","createRef","state","labels","handleSubtotal","array","reduce","a","b","parseFloat","toFixed","handleTotal","arr1","props","incomeAmountArray","arr2","expenseAmountArray","total","group","expenseArray","r","categories","Object","keys","map","g","undefined","dat","amount","console","log","total1","c","componentDidUpdate","myChartRef","current","getContext","expenseCat","type","data","datasets","label","backgroundColor","borderColor","borderWidth","options","legend","fontSize","scales","xAxes","ticks","beginAtZero","yAxes","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\n\nclass Result extends Component {\n  chartRef = React.createRef();\n  state = {\n    labels: []\n  }\n\n  componentDidUpdate() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    const {expenseArray, expenseAmountArray, expenseCat} = this.props\n    new Chart(myChartRef, {\n      type: \"horizontalBar\",\n      data: {\n        //Bring in data\n        labels: expenseArray.map((data) => data.categories),\n        datasets: [\n          {\n            label: \"Expense Result\",\n            data: expenseArray.map((data) => data.amount),\n            // data: this.a(),\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n              \"rgba(255, 159, 64, 0.2)\"\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\"\n            ],\n            borderWidth: 1\n          }\n        ],\n      },\n      options: {\n        //Customize chart options\n        legend: {\n          labels: {\n            fontSize: 22\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                fontSize: 22\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                fontSize: 22\n              }\n            }\n          ]\n        }\n      }\n    });\n  }\n\n  handleSubtotal = (array) => {\n    return array.reduce((a, b) =>\n      parseFloat(a) + parseFloat(b), 0\n    ).toFixed(2)\n  }\n\n  handleTotal = () => {\n    const arr1 = this.handleSubtotal(this.props.incomeAmountArray);\n    const arr2 = this.handleSubtotal(this.props.expenseAmountArray);\n    return (arr1 - arr2).toFixed(2)\n  }\n\n  total = () => {\n    const group =\n    this.props.expenseArray.reduce((r, a) => {\n      r[a.categories] = [...r[a.categories] || [], a];\n      return r;\n      }, {});\n\n      return Object.keys(group).map((g) => {\n        if (group[g] === undefined) {\n            return\n          } else {\n            const b = group[g].reduce((a, dat) => {\n              a += parseFloat(dat.amount)\n              return a;\n            }, 0)\n            console.log(b);\n            return `${g}: ${b}`;\n          }\n      })\n    }\n\n    total1 = () => {\n      this.total().map((c) => {\n        console.log(c);\n        return c\n      }\n    )}\n\n  render() {\n\n    console.log(this.total())\n    console.log(this.total1());\n    \n    // console.log(this.props.expenseArray);\n\n    // const array1 = this.reduceArray(this.props.expenseArray)\n    // console.log(array1);\n    \n    return (\n      <div>\n        {this.handleTotal() >= 0 ?\n\n          <h3 className=\"colorPositive\"> Balance: $ {this.handleTotal()} </h3>\n\n          :\n\n        <h3 className=\"colorNegative\"> Balance: $ {this.handleTotal()} </h3>}\n        <canvas\n          id=\"myChart\"\n          ref={this.chartRef}\n      />\n        <div> {this.total()} </div>\n      </div>\n    )\n  }\n}\n\nexport default Result"]},"metadata":{},"sourceType":"module"}