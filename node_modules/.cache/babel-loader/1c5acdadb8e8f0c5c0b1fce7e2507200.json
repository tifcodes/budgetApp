{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanywong/Documents/juno/bootcamp/week6/tiffanyWongProjectFive/src/Result.js\";\nimport React, { Component } from \"react\";\nimport Chart from \"chart.js\";\n\nclass Result extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n    this.state = {\n      total: 0,\n      consolidated: []\n    };\n\n    this.handleSubtotal = array => {\n      return array.reduce((a, b) => parseFloat(a) + parseFloat(b), 0).toFixed(2);\n    };\n\n    this.handleTotal = () => {\n      const arr1 = this.handleSubtotal(this.props.incomeAmountArray);\n      const arr2 = this.handleSubtotal(this.props.expenseAmountArray);\n      const total = (arr1 - arr2).toFixed(2); // return (arr1 - arr2).toFixed(2)\n\n      this.setState({\n        total: total\n      });\n    };\n\n    this.consolidateTrans = () => {\n      const consolidateCat = this.props.expenseArray.reduce((acc, trans) => {\n        acc[trans.categories] = [...(acc[trans.categories] || []), trans];\n        return acc;\n      }, {});\n      return Object.keys(consolidateCat).map(category => {\n        if (consolidateCat[category] === undefined) {\n          return;\n        } else {\n          const consolidateTotal = consolidateCat[category].reduce((accTotal, trans) => {\n            accTotal += parseFloat(trans.amount);\n            return accTotal;\n          }, 0); // const consolidated = `${category}: ${consolidateTotal}`\n          // console.log(consolidated);\n          // this.setState({\n          //   consolidated: consolidated\n          // })\n          // return `${category}: ${consolidateTotal}`;\n        }\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    const _this$props = this.props,\n          expenseArray = _this$props.expenseArray,\n          expenseAmountArray = _this$props.expenseAmountArray,\n          expenseCat = _this$props.expenseCat;\n    new Chart(myChartRef, {\n      type: \"horizontalBar\",\n      data: {\n        //Bring in data\n        // labels: this.consolidateTrans().map((cat) => { return cat.split(': ')[0] }),\n        datasets: [{\n          label: \"Expense Result\",\n          // data: this.consolidateTrans().map((cat) => {return cat.split(': ')[1]}),\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        //Customize chart options\n        legend: {\n          labels: {\n            fontSize: 22\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontSize: 22\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontSize: 22\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.consolidated);\n    console.log(this.state.total);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.handleTotal() >= 0 ? React.createElement(\"h3\", {\n      className: \"colorPositive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" Balance: $ \", this.handleTotal(), \" \") : React.createElement(\"h3\", {\n      className: \"colorNegative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Balance: $ \", this.handleTotal(), \" \"), React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Result;","map":{"version":3,"sources":["/Users/tiffanywong/Documents/juno/bootcamp/week6/tiffanyWongProjectFive/src/Result.js"],"names":["React","Component","Chart","Result","chartRef","createRef","state","total","consolidated","handleSubtotal","array","reduce","a","b","parseFloat","toFixed","handleTotal","arr1","props","incomeAmountArray","arr2","expenseAmountArray","setState","consolidateTrans","consolidateCat","expenseArray","acc","trans","categories","Object","keys","map","category","undefined","consolidateTotal","accTotal","amount","componentDidUpdate","myChartRef","current","getContext","expenseCat","type","data","datasets","label","backgroundColor","borderColor","borderWidth","options","legend","labels","fontSize","scales","xAxes","ticks","beginAtZero","yAxes","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\n\nclass Result extends Component {\n  chartRef = React.createRef();\n  state = {\n    total: 0, \n    consolidated: []\n  }\n\n  componentDidUpdate() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    const {expenseArray, expenseAmountArray, expenseCat} = this.props\n    new Chart(myChartRef, {\n      type: \"horizontalBar\",\n      data: {\n        //Bring in data\n        // labels: this.consolidateTrans().map((cat) => { return cat.split(': ')[0] }),\n        datasets: [\n          {\n            label: \"Expense Result\",\n            // data: this.consolidateTrans().map((cat) => {return cat.split(': ')[1]}),\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n              \"rgba(255, 159, 64, 0.2)\"\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\"\n            ],\n            borderWidth: 1\n          }\n        ],\n      },\n      options: {\n        //Customize chart options\n        legend: {\n          labels: {\n            fontSize: 22\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                fontSize: 22\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                fontSize: 22\n              }\n            }\n          ]\n        }\n      }\n    });\n  }\n\n  handleSubtotal = (array) => {\n    return array.reduce((a, b) =>\n      parseFloat(a) + parseFloat(b), 0\n    ).toFixed(2)\n  }\n\n  handleTotal = () => {\n    const arr1 = this.handleSubtotal(this.props.incomeAmountArray);\n    const arr2 = this.handleSubtotal(this.props.expenseAmountArray);\n    const total = (arr1 - arr2).toFixed(2)\n    // return (arr1 - arr2).toFixed(2)\n    this.setState({\n        total: total\n    })\n  }\n\n  consolidateTrans = () => {\n    const consolidateCat =\n    this.props.expenseArray.reduce((acc, trans) => {\n      acc[trans.categories] = [...acc[trans.categories] || [], trans];\n      return acc;\n      }, {});\n\n      return Object.keys(consolidateCat).map((category) => {\n        if (consolidateCat[category] === undefined) {\n            return\n          } else {\n            const consolidateTotal = consolidateCat[category].reduce((accTotal, trans) => {\n              accTotal += parseFloat(trans.amount)\n              return accTotal;\n            }, 0)\n            // const consolidated = `${category}: ${consolidateTotal}`\n            // console.log(consolidated);\n            // this.setState({\n            //   consolidated: consolidated\n            // })\n            // return `${category}: ${consolidateTotal}`;\n          }\n      })\n    }\n    \n  render() {\n    console.log(this.state.consolidated);\n    console.log(this.state.total);\n    \n    \n    return (\n      <div>\n        {this.handleTotal() >= 0 ?\n\n          <h3 className=\"colorPositive\"> Balance: $ {this.handleTotal()} </h3>\n\n          :\n\n        <h3 className=\"colorNegative\"> Balance: $ {this.handleTotal()} </h3>}\n        <canvas\n          id=\"myChart\"\n          ref={this.chartRef}\n      />\n      </div>\n    )\n  }\n}\n\nexport default Result"]},"metadata":{},"sourceType":"module"}